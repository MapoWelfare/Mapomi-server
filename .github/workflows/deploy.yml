name: Docker CI/CD

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2

      - name: 📦️ Setup JDK 11.0.12
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.12

      - name: 💾 Cache Gradle & Spring
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

#      - name: make application-db.properties
#        run: |
#          cd ./src/main/resources
#          touch ./application-db.properties
#          echo "${{ secrets.DB_PROPERTIES }}" > ./application-db.properties
#        shell: bash

      - name: 🔧 Build Spring server
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

#      - name: Build Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          outputs: type=docker,dest=./sinzak-backend.tar
#          push: false
#          tags: sinzak:latest

      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.HOST_DEV }}
          key: ${{ secrets.SSH_PEM_KEY }}
#          source: "./sinzak-backend.tar"
          source: "./build/libs/*.jar"
          target: "/home/ec2-user/deploy"
          strip_components: 2


      - name: Execute Server Init Script
        uses: appleboy/ssh-action@master
        id: deploy-prod
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ec2-user
          key: ${{ secrets.SSH_PEM_KEY }}
          port: 22
          envs: GITHUB_SHA
          script: |
            cd deploy
            docker build -t mapomi .
            docker container stop mapomi
            docker run -d --rm -p 8080:8080 --name mapomi mapomi
